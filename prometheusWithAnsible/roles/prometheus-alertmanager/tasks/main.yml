- name: Creating alertmanager user group
  group: name="{{groupId}}"
  become: true

- name: Creating alertmanager user
  user:
    name: "{{userId}}"
    group: "{{groupId}}"
    system: yes
    shell: "/sbin/nologin"
    comment: "{{userId}} nologin User"
    createhome: "no"
    state: present

- name: Creates alertmanager directory under etc directory
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{userId}}"
    group: "{{groupId}}"
    mode: '0755'
  with_items:
    - "{{ alertmanager_etc }}"
    - "{{ var_lib_alertmanager }}"
    - "{{ etc_atmool }}"
    - "{{ alert_storage_path }}"
    - "{{ alert_template_path }}"

- name: Install prometheus alertmanager
  unarchive:
    src: "https://nexus.cfrm.dev.local/repository/devops-artifacts/prometheus/alertmanager/alertmanager-{{ alertmanager_version }}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: yes

#- name: Copy prometheus alertmanager.yml file to etc alertmanager directory
#  copy:
#    src: "/tmp/alertmanager-{{ alertmanager_version }}.linux-amd64/alertmanager.yml"
#    dest: "{{ alertmanager_etc }}/alertmanager.yml"
#    owner: "{{userId}}"
#    group: "{{groupId}}"
#    remote_src: yes
#    mode: 0755

#- name: Copy systemd init file
#  template:
#    src: init.service.j2
#    dest: "{{ alertmanager_etc_systemd }}/alertmanager.service"

- name: Copy alertmanager dependency amtool file to bin
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{userId}}"
    group: "{{groupId}}"
    remote_src: yes
    mode: '0755'
  loop:
    - { src: '/tmp/alertmanager-{{ alertmanager_version }}.linux-amd64/alertmanager', dest: '{{ alert_usr_local_bin }}/alertmanager' }
    - { src: '/tmp/alertmanager-{{ alertmanager_version }}.linux-amd64/amtool', dest: '{{ alert_usr_local_bin }}/amtool' }
  
- name: Copy alertmanager dependency amtool file to bin
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{userId}}"
    group: "{{groupId}}"
    mode: '0755'
  loop:
    - { src: 'files/cfrm.tmpl', dest: '{{ alert_template_path }}/cfrm.tmpl' }
    - { src: 'files/email.html', dest: '{{ alert_template_path }}/email.html' }
    - { src: 'files/default.tmpl.bak', dest: '{{ alert_template_path }}/default.tmpl.bak' }

- name: "Copy bin executable files to usr local bin directory"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{userId}}"
    group: "{{groupId}}"
    mode: '0755'
  loop:
    - { src: 'alertmanager.yml.j2', dest: '{{ alertmanager_etc }}/alertmanager.yml' }
    - { src: 'alertmanager.service.j2', dest: '{{ alertmanager_etc_systemd }}/alertmanager.service' }
  notify: event_restart_alertmanager

- name: Start alertmanager service
  service:
    name: "{{ alertmanager_serviceName }}"
    state: started
    enabled: yes

- name: Check if alertmanager emits metrices
  uri:
    url: "http://{{ localhost }}:{{ alertmanager_port }}"
    method: GET
    status_code: 200

- name: Creating a atmool config file 
  copy:
    dest: "{{ etc_atmool }}/config.yml"
    owner: "{{userId}}"
    group: "{{groupId}}"
    remote_src: yes
    mode: '0755'
    content: |
      alertmanager.url: "http://{{ localhost }}:{{ alertmanager_port }}"

#- name: insert alertmanager data into prometheus config file
#  shell: |
#    echo "  " >> {{ alertmanager_etc }}/prometheus.conf
#    echo "  - job_name: 'alertmanager'" >> {{ alertmanager_etc }}/prometheus.conf
#    echo "    scrape_interval: 5s" >> {{ alertmanager_etc }}/prometheus.conf
#    echo "    static_configs:" >> {{ alertmanager_etc }}/prometheus.conf
#    echo "      - targets: ['{{ localhost }}:{{ alertmanager_port }}']" >> {{ alertmanager_etc }}/prometheus.conf

- name: Restart prometheus service
  service:
    name: "{{ prometheus_serviceName }}"
    state: restarted
    enabled: yes

- name: Delete alertmanager tmp folder
  file:
    path: '/tmp/alertmanager-{{ alertmanager_version }}.linux-amd64'
    state: absent