- name: Creating prometheus user group
  group: name="{{groupId}}"
  become: true

- name: Creating prometheus user
  user:
    name: "{{userId}}"
    group: "{{groupId}}"
    system: yes
    shell: "/sbin/nologin"
    comment: "{{userId}} nologin User"
    createhome: "no"
    state: present

- name: Creates directory
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{userId}}"
    group: "{{groupId}}"
    mode: 0755
  with_items:
    - "{{ prometheus_data }}"
    - "{{ prometheus_etc }}"
    - "{{ prometheus_var_lib }}"

- name: Install prometheus
  unarchive:
    src: "https://nexus.cfrm.dev.local/repository/devops-artifacts/prometheus/prometheus/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: yes

#- name: Copy prometheus file to bind
#  copy:
#    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/prometheus"
#    dest: "{{ pro_usr_local_bin }}/prometheus"
#    owner: "{{userId}}"
#    group: "{{groupId}}"
#    remote_src: yes
##    mode: 0755

- name: "Copy bin executable files to usr local bin directory"
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{userId}}"
    group: "{{groupId}}"
    remote_src: yes
    mode: '0755'
  loop:
    - { src: '/tmp/prometheus-{{ prometheus_version }}.linux-amd64/prometheus', dest: '{{ pro_usr_local_bin }}/prometheus' }
    - { src: '/tmp/prometheus-{{ prometheus_version }}.linux-amd64/promtool', dest: '{{ pro_usr_local_bin }}/promtool' }

- name: "Copy alert rules files to prometheus config directory"
  copy:
    src: "files/alert.rules"
    dest: "{{ prometheus_etc }}/alert.rules"
    owner: "{{userId}}"
    group: "{{groupId}}"
    mode: '0755'
    
- name: "Copy console and libraries files to usr local bin directory"
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{userId}}"
    group: "{{groupId}}"
    remote_src: yes
    mode: '0755'
    directory_mode: yes
  loop:
    - { src: '/tmp/prometheus-{{ prometheus_version }}.linux-amd64/consoles', dest: '{{ prometheus_etc }}/consoles' }
    - { src: '/tmp/prometheus-{{ prometheus_version }}.linux-amd64/console_libraries', dest: '{{ prometheus_etc }}/console_libraries' }

- name: Delete prometheus tmp folder
  file:
    path: '/tmp/prometheus-{{ prometheus_version }}.linux-amd64'
    state: absent

#- name: config file
#  template:
#    src: prometheus.conf.j2
#    dest: "{{ prometheus_etc }}/prometheus.conf"
#  notify: event_restart_prometheus

#- name: Copy systemd init file
#  template:
#    src: init.service.j2
#    dest: "{{ pro_systemd_service }}/prometheus.service"
#  notify: systemd_reload

- name: copying config file to prometheus config folder
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_etc }}/prometheus.yml"
    owner: "{{userId}}"
    group: "{{groupId}}"
    mode: '0755'
  notify: event_restart_prometheus

- name: Copy systemd init file to systemd service folder
  template:
    src: prometheus.service.j2
    dest: "{{ pro_systemd_service }}/prometheus.service"
  notify: systemd_reload

- name: Start prometheus service
  service:
    name: "{{ prometheus_serviceName }}"
    state: started
    enabled: yes

- name: Check if prometheus is accessible
  uri:
    url: "http://{{ localhost }}:{{ prometheus_port }}"
    method: GET
    status_code: 200
################# Note : this service will not run if /etc/prometheus/prometheus.conf file is having any mis alignment under target secion ################