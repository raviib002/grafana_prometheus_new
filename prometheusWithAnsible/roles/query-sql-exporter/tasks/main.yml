- name: install python36, python3-pip, libaio, oracleclient, postgresql-libs, postgresql, postgresql-devel from local and nexus
  yum: pkg={{ item }} state=present
  with_items:
    - python36
    - python3-pip
    - "{{ libaio_dep_url }}"
    - "{{ oracleclient_url }}"
    - "{{ postgresql_libs_url }}"
    - "{{ postgresql_url }}"
    - "{{ postgresql_devel_url }}"

#######################################################################################################################

- name: Setting-up the LD Library path
  shell: "export LD_LIBRARY_PATH=/usr/lib/oracle/12.2/client64/lib"

########################################################################################################################

- name: Downloading query exporter .pex file from nexus
  shell: "wget {{ queryexporter_pex_url }}"

- name: Installing Query exporter .pex file into bin directory
  shell: "install -m 0755 query-exporter-*.pex /bin/query-exporter"

########################################################################################################################

- name: Creating sqlexporter config directory under data directory
  file:
    path: "{{ sqlexp_data }}"
    state: directory
    owner: "root"
    group: "root"
    mode: 0775

- name: Copy config yml file into var directory
  templates:
    src: config.yaml
    dest: /var/config.yaml

- name: Copy config yml file updater shell script into var directory
  templates:
    src: config_yml_updater.j2
    dest: /var/update_config_yml.sh

- name: executing the config yaml updater shell script
  shell: "sh /var/update_config_yml.sh"

- name: copy config yaml file into data sqlexporter_config directory
  shell: "cp -r /var/config.yaml {{ sqlexp_data }}/"

- name: Copy oracle path shell script file into etc profile.d directory to set ld library path
  templates:
    src: oracle_path.sh
    dest: "{{ sqlexp_etc_profile }}/oracle_path.sh"
  
- name: Copy sqlexporter service file into systemd directory
  templates:
    src: sqlexporter.service
    dest: "{{ sqlexp_etc_systemd }}/sqlexporter.service"
  notify: event_restart_sqlexporter

- name: Delete config yaml file from var folder
  file:
    path: '/var/config.yaml'
    state: absent

- name: Delete config yaml file updater shell script from var folder
  file:
    path: '/var/update_config_yml.sh'
    state: absent

- name: start service sqlexporter
  systemd:
    name: "{{ sqlexp_serviceName }}"
    state: started
    enabled: yes

- name: waiting 5 seconds to execute next (waiting for service up) 
  shell: "sleep 5"

- name: wait for service up
  uri:
    url: "http://{{ localhost }}:{{ sqlexp }}/metrics"
    status_code: 200
  register: __result
  until: __result.status == 200
  retries: 20
  delay: 1
